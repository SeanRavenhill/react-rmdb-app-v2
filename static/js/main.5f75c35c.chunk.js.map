{"version":3,"sources":["images/react-movie-logo.svg","images/tmdb_logo.svg","components/Header/Header.styles.js","components/Header/index.js","config.js","components/HeroImage/HeroImage.styles.js","components/HeroImage/index.js","components/Grid/Grid.styles.js","components/Grid/index.js","components/Thumb/Thumb.styles.js","components/Thumb/index.js","components/Spinner/index.js","components/Spinner/Spinner.styles.js","images/search-icon.svg","components/SearchBar/SearchBar.styles.js","components/SearchBar/index.js","components/Button/Button.styles.js","components/Button/index.js","API.js","helpers.js","hooks/useHomeFetch.js","images/no_image.jpg","components/Home.js","components/BreadCrumb/BreadCrumb.styles.js","components/BreadCrumb/index.js","components/MovieInfoPoster/MovieInfoPoster.styles.js","components/MovieInfoPoster/index.js","components/MovieInfo/MovieInfo.styles.js","components/MovieInfo/index.js","components/MovieInfoBar/MovieInfoBar.styles.js","components/MovieInfoBar/index.js","components/Actor/Actor.styles.js","components/Actor/index.js","components/Movie.js","hooks/useMovieFetch.js","components/NotFound.js","GlobalStyle.js","App.js","index.js"],"names":["Wrapper","styled","div","Content","LogoImg","img","TMDBLogoImg","Header","to","src","RMDBLogo","alt","TMDBLogo","API_URL","API_KEY","process","SEARCH_BASE_URL","POPULAR_BASE_URL","REQUEST_TOKEN_URL","LOGIN_URL","SESSION_ID_URL","IMAGE_BASE_URL","BACKDROP_SIZE","POSTER_SIZE","image","Text","HeroImage","title","text","Grid","header","children","Image","Thumb","movieId","clickable","Spinner","SearchBar","setSearchTerm","useState","state","setState","initial","useRef","useEffect","current","timer","setTimeout","clearTimeout","searchIcon","type","placeholder","onChange","event","currentTarget","value","button","Button","callback","onClick","defaultConfig","method","headers","apiSettings","fetchMovies","searchTerm","page","a","endpoint","fetch","json","fetchMovie","fetchCredits","creditsEndpoint","getRequestToken","reqToken","request_token","authenticate","requestToken","username","password","bodyData","body","JSON","stringify","success","sessionId","rateMovie","rating","calcTime","time","hours","Math","floor","mins","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","isPersistedState","stateName","sessionState","sessionStorage","getItem","parse","initialState","results","total_pages","total_results","Home","loading","setLoading","error","setError","isLoadingMore","setIsLoadingMore","API","movies","prev","setItem","useHomeFetch","Fragment","backdrop_path","original_title","overview","map","movie","poster_path","NoImage","id","BreadCrumb","movieTitle","MovieInfoPoster","backdrop","MovieInfo","className","vote_average","directors","lenght","director","name","credit_id","MovieInfoBar","budget","revenue","Actor","character","imageUrl","Movie","credits","crew","filter","member","job","actors","cast","useMovieFetch","useParams","runtime","actor","profile_path","NotFound","GlobalStyle","createGlobalStyle","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f75c35c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/react-movie-logo.42955eb6.svg\";","export default __webpack_public_path__ + \"static/media/tmdb_logo.f15b6632.svg\";","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n\tbackground: var(--darkGrey);\n\tpadding: 0 20px;\n`;\n\nexport const Content = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n\tmax-width: var(--maxWidth);\n\tpadding: 20px 0;\n\tmargin: 0 auto;\n`;\n\nexport const LogoImg = styled.img`\n\twidth: 200px;\n\n\t@media screen and (max-width: 500px) {\n\t\twidth: 150px;\n\t}\n`;\n\nexport const TMDBLogoImg = styled.img`\n\twidth: 100px;\n\n\t@media screen and (max-width: 500px) {\n\t\twidth: 80px;\n\t}\n`;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// Logos & Images\nimport RMDBLogo from \"../../images/react-movie-logo.svg\";\nimport TMDBLogo from \"../../images/tmdb_logo.svg\";\n\n// Styles\nimport { Wrapper, Content, LogoImg, TMDBLogoImg } from \"./Header.styles\";\n\nconst Header = () => (\n\t<Wrapper>\n\t\t<Content>\n\t\t\t<Link to=\"/\">\n\t\t\t\t<LogoImg src={RMDBLogo} alt=\"rmdb-Logo\" />\n\t\t\t</Link>\n\t\t\t<TMDBLogoImg src={TMDBLogo} alt=\"tmdb-logo\" />\n\t\t</Content>\n\t</Wrapper>\n);\n\nexport default Header;\n","// Configuration for TMDB API\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL = \"https://api.themoviedb.org/3/\";\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=`;\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US`;\n// For login and voting\nconst REQUEST_TOKEN_URL = `${API_URL}authentication/token/new?api_key=${API_KEY}`;\nconst LOGIN_URL = `${API_URL}authentication/token/validate_with_login?api_key=${API_KEY}`;\nconst SESSION_ID_URL = `${API_URL}authentication/session/new?api_key=${API_KEY}`;\n\nconst IMAGE_BASE_URL = \"http://image.tmdb.org/t/p/\";\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = \"w1280\";\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = \"w780\";\n\nexport {\n\tSEARCH_BASE_URL,\n\tPOPULAR_BASE_URL,\n\tAPI_URL,\n\tAPI_KEY,\n\tIMAGE_BASE_URL,\n\tBACKDROP_SIZE,\n\tPOSTER_SIZE,\n\tREQUEST_TOKEN_URL,\n\tLOGIN_URL,\n\tSESSION_ID_URL,\n};\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n\tbackground: linear-gradient(\n\t\t\tto bottom,\n\t\t\trgba(0, 0, 0, 0) 41%,\n\t\t\trgba(0, 0, 0, 0.65) 100%\n\t\t),\n\t\turl(${({ image }) => image}), var(--darkGrey);\n\tbackground-size: 100%, cover;\n\tbackground-position: center;\n\theight: 600px;\n\tposition: relative;\n\tanimation: animateHeroImage 1s;\n\n\t@keyframes animateHeroImage {\n\t\tfrom {\n\t\t\topacity: 0;\n\t\t}\n\t\tto {\n\t\t\topacity: 1;\n\t\t}\n\t}\n`;\n\nexport const Content = styled.div`\n\tpadding: 20px;\n\tmax-width: var(--maxWidth);\n\tmargin: 0 auto;\n`;\n\nexport const Text = styled.div`\n\tz-index: 100;\n\tmax-width: 700px;\n\tposition: absolute;\n\tbottom: 40px;\n\tmargin-right: 20px;\n\tmin-height: 100px;\n\tcolor: var(--white);\n\n\th1 {\n\t\tfont-size: var(--fontSuperBig);\n\n\t\t@media screen and (max-width: 720px) {\n\t\t\tfont-size: var(--fontBig);\n\t\t}\n\t}\n\n\tp {\n\t\tfont-size: var(--fontMed);\n\n\t\t@media screen and (max-width: 720px) {\n\t\t\tfont-size: var(--fontSmall);\n\t\t}\n\t}\n\n\t@media screen and (max-width: 720px) {\n\t\tmax-width: 100%;\n\t}\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Styles\nimport { Wrapper, Content, Text } from \"./HeroImage.styles\";\n\n// NB the use of props destructuring here for image, title and text\nconst HeroImage = ({ image, title, text }) => (\n\t<Wrapper image={image}>\n\t\t<Content>\n\t\t\t<Text>\n\t\t\t\t<h1>{title}</h1>\n\t\t\t\t<p>{text}</p>\n\t\t\t</Text>\n\t\t</Content>\n\t</Wrapper>\n);\n\nHeroImage.propTypes = {\n\timage: PropTypes.string,\n\ttitle: PropTypes.string,\n\ttext: PropTypes.string,\n}\n\nexport default HeroImage;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n\tmax-width: var(--maxWidth);\n\tmargin: 0 auto;\n\tpadding: 0 20px;\n\n\th1 {\n\t\tcolor: var(--medGrey);\n\n\t\t@media screen and (max-width: 768px) {\n\t\t\tfont-size: var(--fontBig);\n\t\t}\n\t}\n`;\n\nexport const Content = styled.div`\n\tdisplay: grid;\n\tgrid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n\tgrid-gap: 2rem;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Styles\nimport { Wrapper, Content } from \"./Grid.styles\";\n\nconst Grid = ({ header, children }) => (\n\t<Wrapper>\n\t\t<h1>{header}</h1>\n\t\t<Content>{children}</Content>\n\t</Wrapper>\n);\n\nGrid.propTypes = {\n\theader: PropTypes.string,\n};\n\nexport default Grid;\n","import styled from \"styled-components\";\n\nexport const Image = styled.img`\n\twidth: 100%;\n\tmax-width: 720px;\n\theight: 100%;\n\ttransition: all 0.3s;\n\tobject-fit: cover;\n\tborder-radius: 20px;\n\tanimation: animateThumb 0.5s;\n\n\t:hover {\n\t\ttransform: scale(1.025);\n\t}\n\n\t@keyframes animateThumb {\n\t\tfrom {\n\t\t\topacity: 0;\n\t\t}\n\t\tto {\n\t\t\topacity: 1;\n\t\t}\n\t}\n`;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\n// Styles\nimport { Image } from \"./Thumb.styles\";\n\nconst Thumb = ({ image, movieId, clickable, alt }) => (\n\t<div>\n\t\t{clickable ? (\n\t\t\t<Link to={`/${movieId}`}>\n\t\t\t\t<Image src={image} alt={alt} />\n\t\t\t</Link>\n\t\t) : (\n\t\t\t<Image src={image} alt={alt} />\n\t\t)}\n\t</div>\n);\n\nThumb.propTypes = {\n\timage: PropTypes.string,\n\tmovieId: PropTypes.number,\n\tclickable: PropTypes.bool,\n\talt: PropTypes.string,\n};\n\nexport default Thumb;\n","// Styles *NB no need for React import here. Component is a simple spinner.\nimport { Spinner } from \"./Spinner.styles\";\n\nexport default Spinner;\n","import styled from \"styled-components\";\n\nexport const Spinner = styled.div`\n\tborder: 5px solid var(--lightGrey);\n\tborder-top: 5px solid var(--medGrey);\n\tborder-radius: 50%;\n\twidth: 50px;\n\theight: 50px;\n\tanimation: spin 0.8s linear infinite;\n\tmargin: 20px auto;\n\n\t@keyframes spin {\n\t\t0% {\n\t\t\ttransform: rotate(0deg);\n\t\t}\n\t\t100% {\n\t\t\ttransform: rotate(360deg);\n\t\t}\n\t}\n`;\n","export default __webpack_public_path__ + \"static/media/search-icon.cd820f5a.svg\";","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\theight: 100px;\n\tbackground: var(--darkGrey);\n\tpadding: 0 20px;\n`;\n\nexport const Content = styled.div`\n\tposition: relative;\n\tmax-width: var(--maxWidth);\n\twidth: 100%;\n\theight: 55px;\n\tbackground: var(--medGrey);\n\tmargin: 0 auto;\n\tborder-radius: 40px;\n\tcolor: var(--white);\n\n\timg {\n\t\tposition: absolute;\n\t\tleft: 15px;\n\t\ttop: 14px;\n\t\twidth: 30px;\n\t}\n\n\tinput {\n\t\tfont-size: var(--fontBig);\n\t\tposition: absolute;\n\t\tleft: 0;\n\t\tmargin: 8px 0;\n\t\tpadding: 0 0 0 60px;\n\t\tborder: 0;\n\t\twidth: 95%;\n\t\tbackground: transparent;\n\t\theight: 40px;\n\t\tcolor: var(--white);\n\n\t\t:focus {\n\t\t\toutline: none;\n\t\t}\n\t}\n`;\n","import React, { useState, useEffect, useRef } from \"react\";\n\n// Image\nimport searchIcon from \"../../images/search-icon.svg\";\n\n// Styles\nimport { Wrapper, Content } from \"./SearchBar.styles\";\n\nconst SearchBar = ({ setSearchTerm }) => {\n\tconst [state, setState] = useState(\"\");\n\tconst initial = useRef(true);\n\n\tuseEffect(() => {\n\t\tif (initial.current) {\n\t\t\tinitial.current = false;\n\t\t\treturn;\n\t\t}\n\t});\n\n\tuseEffect(() => {\n\t\tconst timer = setTimeout(() => {\n\t\t\tsetSearchTerm(state);\n\t\t}, 500);\n\t\treturn () => clearTimeout(timer);\n\t}, [setSearchTerm, state]);\n\n\treturn (\n\t\t<Wrapper>\n\t\t\t<Content>\n\t\t\t\t<img src={searchIcon} alt=\"search-icon\" />\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Search Movie\"\n\t\t\t\t\tonChange={(event) => setState(event.currentTarget.value)}\n\t\t\t\t\tvalue={state}\n\t\t\t\t/>\n\t\t\t</Content>\n\t\t</Wrapper>\n\t);\n};\n\nexport default SearchBar;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.button`\n\tdisplay: block;\n\tbackground: var(--darkGrey);\n\twidth: 25%;\n\tmin-width: 200px;\n\theight: 60px;\n\tborder-radius: 30px;\n\tcolor: var(--white);\n\tborder: 0;\n\tfont-size: var(--fontBig);\n\tmargin: 20px auto;\n\ttransition: all 0.3s;\n\toutline: none;\n\tcursor: pointer;\n\n\t:hover {\n\t\topacity: 0.8;\n\t}\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Styles\nimport { Wrapper } from \"./Button.styles\";\n\nconst Button = ({ text, callback }) => (\n\t<Wrapper type=\"button\" onClick={callback}>\n\t\t{text}\n\t</Wrapper>\n);\n\nButton.propTypes = {\n\ttext: PropTypes.string,\n\tcallback: PropTypes.func,\n};\n\nexport default Button;\n","import {\n\tSEARCH_BASE_URL,\n\tPOPULAR_BASE_URL,\n\tAPI_URL,\n\tAPI_KEY,\n\tREQUEST_TOKEN_URL,\n\tLOGIN_URL,\n\tSESSION_ID_URL,\n} from \"./config\";\n\nconst defaultConfig = {\n\tmethod: \"POST\",\n\theaders: {\n\t\t\"Content-Type\": \"application/json\",\n\t},\n};\n\nconst apiSettings = {\n\tfetchMovies: async (searchTerm, page) => {\n\t\tconst endpoint = searchTerm\n\t\t\t? `${SEARCH_BASE_URL}${searchTerm}&page=${page}`\n\t\t\t: `${POPULAR_BASE_URL}&page=${page}`;\n\t\treturn await (await fetch(endpoint)).json();\n\t},\n\tfetchMovie: async (movieId) => {\n\t\tconst endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\n\t\treturn await (await fetch(endpoint)).json();\n\t},\n\tfetchCredits: async (movieId) => {\n\t\tconst creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n\t\treturn await (await fetch(creditsEndpoint)).json();\n\t},\n\t// Bonus material below for login\n\tgetRequestToken: async () => {\n\t\tconst reqToken = await (await fetch(REQUEST_TOKEN_URL)).json();\n\t\treturn reqToken.request_token;\n\t},\n\tauthenticate: async (requestToken, username, password) => {\n\t\tconst bodyData = {\n\t\t\tusername,\n\t\t\tpassword,\n\t\t\trequest_token: requestToken,\n\t\t};\n\t\t// First authenticate the requestToken\n\t\tconst data = await (\n\t\t\tawait fetch(LOGIN_URL, {\n\t\t\t\t...defaultConfig,\n\t\t\t\tbody: JSON.stringify(bodyData),\n\t\t\t})\n\t\t).json();\n\t\t// Then get the sessionId with the requestToken\n\t\tif (data.success) {\n\t\t\tconst sessionId = await (\n\t\t\t\tawait fetch(SESSION_ID_URL, {\n\t\t\t\t\t...defaultConfig,\n\t\t\t\t\tbody: JSON.stringify({ request_token: requestToken }),\n\t\t\t\t})\n\t\t\t).json();\n\t\t\treturn sessionId;\n\t\t}\n\t},\n\trateMovie: async (sessionId, movieId, value) => {\n\t\tconst endpoint = `${API_URL}movie/${movieId}/rating?api_key=${API_KEY}&session_id=${sessionId}`;\n\n\t\tconst rating = await (\n\t\t\tawait fetch(endpoint, {\n\t\t\t\t...defaultConfig,\n\t\t\t\tbody: JSON.stringify({ value }),\n\t\t\t})\n\t\t).json();\n\n\t\treturn rating;\n\t},\n};\n\nexport default apiSettings;\n","// Convert time to hours and minutes\nexport const calcTime = (time) => {\n\tconst hours = Math.floor(time / 60);\n\tconst mins = time % 60;\n\treturn `${hours}h ${mins}m`;\n};\n// Convert a number to money formatting\nexport const convertMoney = (money) => {\n\tconst formatter = new Intl.NumberFormat(\"en-US\", {\n\t\tstyle: \"currency\",\n\t\tcurrency: \"USD\",\n\t\tminimumFractionDigits: 0,\n\t});\n\treturn formatter.format(money);\n};\n// Session Storage\nexport const isPersistedState = stateName => {\n\tconst sessionState = sessionStorage.getItem(stateName)\n\treturn sessionState && JSON.parse(sessionState);\n}","import { useState, useEffect } from \"react\";\n\n// API\nimport API from \"../API\";\n\n// Helpers\nimport { isPersistedState } from \"../helpers\";\n\nconst initialState = {\n\tpage: 0,\n\tresults: [],\n\ttotal_pages: 0,\n\ttotal_results: 0,\n};\n\nexport const useHomeFetch = () => {\n\tconst [searchTerm, setSearchTerm] = useState(\"\");\n\tconst [state, setState] = useState(initialState);\n\tconst [loading, setLoading] = useState(false);\n\tconst [error, setError] = useState(false);\n\tconst [isLoadingMore, setIsLoadingMore] = useState(false);\n\n\tconst fetchMovies = async (page, searchTerm = \"\") => {\n\t\ttry {\n\t\t\tsetError(false);\n\t\t\tsetLoading(true);\n\n\t\t\tconst movies = await API.fetchMovies(searchTerm, page);\n\n\t\t\tsetState((prev) => ({\n\t\t\t\t...movies,\n\t\t\t\tresults:\n\t\t\t\t\tpage > 1 ? [...prev.results, ...movies.results] : [...movies.results],\n\t\t\t}));\n\t\t} catch (error) {\n\t\t\tsetError(true);\n\t\t}\n\t\tsetLoading(false);\n\t};\n\n\t// Initial and search\n\tuseEffect(() => {\n\t\tif (!searchTerm) {\n\t\t\tconst sessionState = isPersistedState(\"homeState\");\n\n\t\t\tif (sessionState) {\n\t\t\t\tsetState(sessionState);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tsetState(initialState);\n\t\tfetchMovies(1, searchTerm);\n\t}, [searchTerm]);\n\n\t// Load More\n\tuseEffect(() => {\n\t\tif (!isLoadingMore) return;\n\n\t\tfetchMovies(state.page + 1, searchTerm);\n\t\tsetIsLoadingMore(false);\n\t}, [isLoadingMore, searchTerm, state.page]);\n\n\t// Write to sessionStorage\n\tuseEffect(() => {\n\t\tif (!searchTerm) sessionStorage.setItem(\"homeState\", JSON.stringify(state));\n\t}, [searchTerm, state]);\n\n\treturn { state, loading, error, searchTerm, setSearchTerm, setIsLoadingMore };\n};\n","export default __webpack_public_path__ + \"static/media/no_image.22d2aa4d.jpg\";","import React from \"react\";\n\n// Config\nimport { POSTER_SIZE, BACKDROP_SIZE, IMAGE_BASE_URL } from \"../config\";\n\n// Components\nimport HeroImage from \"./HeroImage\";\nimport Grid from \"./Grid\";\nimport Thumb from \"./Thumb\";\nimport Spinner from \"./Spinner\";\nimport SearchBar from \"./SearchBar\";\nimport Button from \"./Button\";\n\n// Hook\nimport { useHomeFetch } from \"../hooks/useHomeFetch\";\n\n// Image\nimport NoImage from \"../images/no_image.jpg\";\n\nconst Home = () => {\n\tconst { state, loading, error, searchTerm, setSearchTerm, setIsLoadingMore } =\n\t\tuseHomeFetch();\n\n\tif (error) return <div>Something went wrong...</div>;\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t{!searchTerm && state.results[0] ? (\n\t\t\t\t<HeroImage\n\t\t\t\t\timage={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.results[0].backdrop_path}`}\n\t\t\t\t\ttitle={state.results[0].original_title}\n\t\t\t\t\ttext={state.results[0].overview}\n\t\t\t\t/>\n\t\t\t) : null}\n\t\t\t<SearchBar setSearchTerm={setSearchTerm} />\n\t\t\t<Grid header={searchTerm ? \"Search Result\" : \"Popular Movies\"}>\n\t\t\t\t{state.results.map((movie) => (\n\t\t\t\t\t<Thumb\n\t\t\t\t\t\tkey={movie.id}\n\t\t\t\t\t\tclickable\n\t\t\t\t\t\timage={\n\t\t\t\t\t\t\tmovie.poster_path\n\t\t\t\t\t\t\t\t? IMAGE_BASE_URL + POSTER_SIZE + movie.poster_path\n\t\t\t\t\t\t\t\t: NoImage\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmovieId={movie.id}\n\t\t\t\t\t\talt={`Title: ${movie.title}`}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</Grid>\n\t\t\t{loading && <Spinner />}\n\t\t\t{state.page < state.total_pages && !loading && (\n\t\t\t\t<Button text=\"Load More\" callback={() => setIsLoadingMore(true)} />\n\t\t\t)}\n\t\t</React.Fragment>\n\t);\n};\n\nexport default Home;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\twidth: 100%;\n\theight: 70px;\n\tbackground: var(--medGrey);\n\tcolor: var(--white);\n`;\n\nexport const Content = styled.div`\n\tdisplay: flex;\n\twidth: 100%;\n\tmax-width: var(--maxWidth);\n\tpadding: 0 20px;\n\n\ta {\n\t\ttext-decoration: none;\n\t}\n\n\tspan {\n\t\tfont-size: var(--fontMed);\n\t\tcolor: var(--white);\n\t\tpadding-right: 10px;\n\n\t\t@media screen and (max-width: 768px) {\n\t\t\tfont-size: var(--fontSmall);\n\t\t}\n\t}\n`;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\n// Styles\nimport { Wrapper, Content } from \"./BreadCrumb.styles\";\n\nconst BreadCrumb = ({ movieTitle }) => (\n\t<Wrapper>\n\t\t<Content>\n\t\t\t<Link to=\"/\">\n\t\t\t\t<span>Home</span>\n\t\t\t</Link>\n\t\t\t<span>|</span>\n\t\t\t<span>{movieTitle}</span>\n\t\t</Content>\n\t</Wrapper>\n);\n\nBreadCrumb.propTypes = {\n\tmovieTitle: PropTypes.string,\n};\n\nexport default BreadCrumb;\n","import styled from \"styled-components\";\n\nexport const Image = styled.img`\n\twidth: 100%;\n\tmax-width: 720px;\n\theight: 100%;\n\ttransition: all 0.3s;\n\tobject-fit: cover;\n\tborder-radius: 20px;\n\tanimation: animateThumb 0.5s;\n\n\t@keyframes animateThumb {\n\t\tfrom {\n\t\t\topacity: 0;\n\t\t}\n\t\tto {\n\t\t\topacity: 1;\n\t\t}\n\t}\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Styles\nimport { Image } from \"./MovieInfoPoster.styles\";\n\nconst MovieInfoPoster = ({ image, alt }) => (\n\t<div>\n\t\t<Image src={image} alt={alt} />\n\t</div>\n);\n\nMovieInfoPoster.propTypes = {\n\timage: PropTypes.string,\n\talt: PropTypes.string,\n};\n\nexport default MovieInfoPoster;\n","import styled from \"styled-components\";\n\n// Config\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from \"../../config\";\n\nexport const Wrapper = styled.div`\n\tbackground: ${({ backdrop }) =>\n\t\tbackdrop ? `url(${IMAGE_BASE_URL}${BACKDROP_SIZE}${backdrop})` : \"#000\"};\n\tbackground-size: cover;\n\tbackground-position: center;\n\tpadding: 40px 20px;\n\tanimation: animateMovieInfo 1s;\n\n\t@keyframes animateMovieInfo {\n\t\tfrom {\n\t\t\topacity: 0;\n\t\t}\n\t\tto {\n\t\t\topacity: 1;\n\t\t}\n\t}\n`;\n\nexport const Content = styled.div`\n\tdisplay: flex;\n\tmax-width: var(--maxWidth);\n\tmargin: 0 auto;\n\tbackground: rgba(0, 0, 0, 0.7);\n\tborder-radius: 20px;\n\n\t@media screen and (max-width: 768px) {\n\t\tdisplay: block;\n\t\tmax-height: none;\n\t}\n`;\n\nexport const Text = styled.div`\n\twidth: 100%;\n\tpadding: 20px 40px;\n\tcolor: var(--white);\n\toverflow: hidden;\n\n\t.rating-directors {\n\t\tdisplay: flex;\n\t\tjustify-content: flex-start;\n\t}\n\n\t.score {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\twidth: 35px;\n\t\theight: 35px;\n\t\tbackground: var(--white);\n\t\tcolor: #000;\n\t\tfont-weight: 800;\n\t\tborder-radius: 50%;\n\t\tmargin: 0;\n\t}\n\n\t.director {\n\t\tmargin: 0 0 0 40px;\n\n\t\tp {\n\t\t\tmargin: 0;\n\t\t}\n\t}\n\n\th1 {\n\t\t@media screen and (max-width: 768px) {\n\t\t\tfont-size: var(--fontBig);\n\t\t}\n\t}\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Component\nimport MovieInfoPoster from \"../MovieInfoPoster\";\n\n// Config\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from \"../../config\";\n\n// Image\nimport NoImage from \"../../images/no_image.jpg\";\n\n// Styles\nimport { Wrapper, Content, Text } from \"./MovieInfo.styles\";\n\nconst MovieInfo = ({ movie }) => (\n\t<Wrapper backdrop={movie.backdrop_path}>\n\t\t<Content>\n\t\t\t<MovieInfoPoster\n\t\t\t\timage={\n\t\t\t\t\tmovie.poster_path\n\t\t\t\t\t\t? `${IMAGE_BASE_URL}${BACKDROP_SIZE}${movie.poster_path}`\n\t\t\t\t\t\t: NoImage\n\t\t\t\t}\n\t\t\t\talt={`Title: ${movie.title}`}\n\t\t\t/>\n\t\t\t<Text>\n\t\t\t\t<h1>{movie.title}</h1>\n\t\t\t\t<h3>PLOT</h3>\n\t\t\t\t<p>{movie.overview}</p>\n\n\t\t\t\t<div className=\"rating-directors\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h3>RATING</h3>\n\t\t\t\t\t\t<div className=\"score\">{movie.vote_average}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"director\">\n\t\t\t\t\t\t<h3>DIRECTOR{movie.directors.lenght > 1 ? \"S\" : \"\"}</h3>\n\t\t\t\t\t\t{movie.directors.map((director) => (\n\t\t\t\t\t\t\t<p key={director.credit_id}>{director.name}</p>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Text>\n\t\t</Content>\n\t</Wrapper>\n);\n\nMovieInfo.propTypes = {\n\tmovie: PropTypes.object,\n};\n\nexport default MovieInfo;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tmin-height: 100px;\n\tbackground: var(--darkGrey);\n\tpadding: 0 20px;\n`;\n\nexport const Content = styled.div`\n\tdisplay: flex;\n\tmax-width: var(--maxWidth);\n\twidth: 100%;\n\tmargin: 0 auto;\n\n\t.column {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tbackground: var(--medGrey);\n\t\tborder-radius: 20px;\n\t\tmargin: 0 20px;\n\t\tflex: 1;\n\n\t\t:first-child {\n\t\t\tmargin-left: 0;\n\t\t}\n\n\t\t:last-child {\n\t\t\tmargin-right: 0;\n\t\t}\n\t}\n\n\t@media screen and (max-width: 768px) {\n\t\tdisplay: block;\n\n\t\t.column {\n\t\t\tmargin: 20px 0;\n\t\t}\n\t}\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Helpers\n\nimport { calcTime, convertMoney } from \"../../helpers\";\n\n// Styles\nimport { Wrapper, Content } from \"./MovieInfoBar.styles\";\n\nconst MovieInfoBar = ({ time, budget, revenue }) => (\n\t<Wrapper>\n\t\t<Content>\n\t\t\t<div className=\"column\">\n\t\t\t\t<p>Running Time: {calcTime(time)}</p>\n\t\t\t</div>\n\t\t\t<div className=\"column\">\n\t\t\t\t<p>Budget: {convertMoney(budget)}</p>\n\t\t\t</div>\n\t\t\t<div className=\"column\">\n\t\t\t\t<p>Revenue: {convertMoney(revenue)}</p>\n\t\t\t</div>\n\t\t</Content>\n\t</Wrapper>\n);\n\nMovieInfoBar.propTypes = {\n\ttime: PropTypes.number,\n\tbudget: PropTypes.number,\n\trevenue: PropTypes.number,\n};\n\nexport default MovieInfoBar;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n\tcolor: var(--white);\n\tbackground: var(--darkGrey);\n\tborder-radius: 20px;\n\tpadding: 5px;\n\ttext-align: center;\n\n\th3 {\n\t\tmargin: 10px 0 0 0;\n\t}\n\n\tp {\n\t\tmargin: 5px 0;\n\t}\n`;\n\nexport const Image = styled.img`\n\tdisplay: block;\n\twidth: 100%;\n\theight: 300px;\n\tobject-fit: cover;\n\tborder-radius: 15px;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Styles\nimport { Wrapper, Image } from \"./Actor.styles\";\n\nconst Actor = ({ name, character, imageUrl }) => (\n\t<Wrapper>\n\t\t<Image src={imageUrl} alt={`Headshot of: ${name}`} />\n\t\t<h3>{name}</h3>\n\t\t<p>{character}</p>\n\t</Wrapper>\n);\n\nActor.propTypes = {\n\tname: PropTypes.string,\n\tcharacter: PropTypes.string,\n\timageUrl: PropTypes.string,\n};\n\nexport default Actor;\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\n\n// Config\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../config\";\n\n// Components\nimport Grid from \"./Grid\";\nimport Spinner from \"./Spinner\";\nimport BreadCrumb from \"./BreadCrumb\";\nimport MovieInfo from \"./MovieInfo\";\nimport MovieInfoBar from \"./MovieInfoBar\";\nimport Actor from \"./Actor\";\n\n// Hook\nimport { useMovieFetch } from \"../hooks/useMovieFetch\";\n\n// Image\nimport NoImage from \"../images/no_image.jpg\";\n\nconst Movie = () => {\n\tconst { movieId } = useParams();\n\n\tconst { state: movie, loading, error } = useMovieFetch(movieId);\n\n\tif (loading) return <Spinner />;\n\tif (error) return <div>Something went wrong...</div>;\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<BreadCrumb movieTitle={movie.original_title} />\n\t\t\t<MovieInfo movie={movie} />\n\t\t\t<MovieInfoBar\n\t\t\t\ttime={movie.runtime}\n\t\t\t\tbudget={movie.budget}\n\t\t\t\trevenue={movie.revenue}\n\t\t\t/>\n\t\t\t<Grid header=\"Actors\">\n\t\t\t\t{movie.actors.map((actor) => (\n\t\t\t\t\t<Actor\n\t\t\t\t\t\tkey={actor.credit_id}\n\t\t\t\t\t\tname={actor.name}\n\t\t\t\t\t\tcharacter={actor.character}\n\t\t\t\t\t\timageUrl={\n\t\t\t\t\t\t\tactor.profile_path\n\t\t\t\t\t\t\t\t? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\n\t\t\t\t\t\t\t\t: NoImage\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</Grid>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default Movie;\n","import { useState, useEffect } from \"react\";\n\nimport API from \"../API\";\n\n// Helpers\nimport { isPersistedState } from \"../helpers\";\n\nexport const useMovieFetch = (movieId) => {\n\tconst [state, setState] = useState({});\n\tconst [loading, setLoading] = useState(true);\n\tconst [error, setError] = useState(false);\n\n\tuseEffect(() => {\n\t\tconst fetchMovie = async () => {\n\t\t\ttry {\n\t\t\t\tsetLoading(true);\n\t\t\t\tsetError(false);\n\n\t\t\t\tconst movie = await API.fetchMovie(movieId);\n\t\t\t\tconst credits = await API.fetchCredits(movieId);\n\t\t\t\t// Get Directors only\n\t\t\t\tconst directors = credits.crew.filter(\n\t\t\t\t\t(member) => member.job === \"Director\"\n\t\t\t\t);\n\n\t\t\t\tsetState({\n\t\t\t\t\t...movie,\n\t\t\t\t\tactors: credits.cast,\n\t\t\t\t\tdirectors,\n\t\t\t\t});\n\n\t\t\t\tsetLoading(false);\n\t\t\t} catch (error) {\n\t\t\t\tsetError(true);\n\t\t\t}\n\t\t};\n\n\t\tconst sessionState = isPersistedState(movieId);\n\n\t\tif (sessionState) {\n\t\t\tsetState(sessionState);\n\t\t\tsetLoading(false);\n\t\t\treturn;\n\t\t}\n\n\t\tfetchMovie();\n\t}, [movieId]);\n\n\t// Write to sessionStorage\n\tuseEffect(() => {\n\t\tsessionStorage.setItem(movieId, JSON.stringify(state));\n\t}, [movieId, state]);\n\n\treturn { state, loading, error };\n};\n","import React from \"react\";\n\nconst NotFound = () => <div>Not Found</div>;\n\nexport default NotFound;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n    :root {\n        --maxWidth: 1280px;\n        --white: #fff;\n        --lightGrey: #eee;\n        --medGrey: #353535;\n        --darkGrey: #1c1c1c;\n        --fontSuperBig: 2.5rem;\n        --fontBig: 1.5rem;\n        --fontMed: 1.2rem;\n        --fontSmall: 1rem;\n    }\n\n    * {\n        box-sizing: border-box;\n        font-family: 'Abel', sans-serif;\n    }\n\n    body {\n        margin: 0;\n        padding: 0;\n\n        h1 {\n            font-size: 2rem;\n            font-weight: 600;\n            color: var(--white);\n        }\n\n        h3 {\n            font-size: 1.1rem;\n            font-weight: 600;\n        }\n\n        p {\n            font-size: 1rem;\n            color: var(--white);\n        }\n    }\n`;\n","import React from \"react\";\n\n// Routing\nimport { HashRouter as Router, Routes, Route } from \"react-router-dom\";\n\n// Components\nimport Header from \"./components/Header\";\nimport Home from \"./components/Home\";\nimport Movie from \"./components/Movie\";\nimport NotFound from \"./components/NotFound\";\n\n// Styles\nimport { GlobalStyle } from \"./GlobalStyle\";\n\nconst App = () => (\n\t<Router>\n\t\t<Header />\n\t\t<Routes>\n\t\t\t<Route path=\"/\" element={<Home />} />\n\t\t\t<Route path=\"/:movieId\" element={<Movie />} />\n\t\t\t<Route path=\"/*\" element={<NotFound />} />\n\t\t</Routes>\n\t\t<GlobalStyle />\n\t</Router>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}